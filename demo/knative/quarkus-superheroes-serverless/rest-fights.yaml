---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: rest-fights
    application: fights-service
    system: quarkus-super-heroes
  name: rest-fights-config
data:
  quarkus.liquibase-mongodb.migrate-at-start: "false"
  quarkus.mongodb.hosts: fights-db:27017
  quarkus.stork.hero-service.service-discovery.type: static
  quarkus.stork.hero-service.service-discovery.address-list: rest-heroes.quarkus-superheroes-serverless.svc.cluster.local:80
  quarkus.stork.villain-service.service-discovery.type: static
  quarkus.stork.villain-service.service-discovery.address-list: rest-villains.quarkus-superheroes-serverless.svc.cluster.local:80
  #quarkus.stork.hero-service.service-discovery.type: kubernetes
  #quarkus.stork.hero-service.service-discovery.application: rest-heroes
  #quarkus.stork.hero-service.service-discovery.refresh-period: 1M
  #quarkus.stork.villain-service.service-discovery.type: kubernetes
  #quarkus.stork.villain-service.service-discovery.application: rest-villains
  #quarkus.stork.villain-service.service-discovery.refresh-period: 1M
  kafka.bootstrap.servers: 'PLAINTEXT://fights-kafka-kafka-bootstrap:9092'
  mp.messaging.connector.smallrye-kafka.apicurio.registry.url: http://apicurio-service:8080/apis/registry/v2
---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  annotations:
    app.openshift.io/connects-to: "fights-db,fights-kafka,apicurio,rest-villains,rest-heroes"
    app.openshift.io/vcs-ref: main
    app.openshift.io/vcs-url: https://github.com/quarkusio/quarkus-super-heroes
    app.quarkus.io/build-timestamp: 2022-06-24 - 20:21:23 +0000
    prometheus.io/scrape: "true"
    prometheus.io/path: /q/metrics
    prometheus.io/port: "8082"
    prometheus.io/scheme: http
    serving.knative.openshift.io/enablePassthrough: "true"
  labels:
    app: rest-fights
    app.openshift.io/runtime: quarkus
    application: fights-service
    system: quarkus-super-heroes
    app.kubernetes.io/part-of: fights-service
    app.kubernetes.io/version: native-java17-latest
    app.kubernetes.io/name: rest-fights
    #networking.knative.dev/visibility: cluster-local
  name: rest-fights
spec:
  template:
    metadata:
      annotations:
        app.quarkus.io/build-timestamp: 2022-06-24 - 20:21:23 +0000
        prometheus.io/scrape: "true"
        prometheus.io/path: /q/metrics
        prometheus.io/port: "8082"
        prometheus.io/scheme: http
        app.openshift.io/connects-to: "fights-db,fights-kafka,apicurio,rest-villains,rest-heroes"
        app.openshift.io/vcs-ref: main
        app.openshift.io/vcs-url: https://github.com/quarkusio/quarkus-super-heroes
        sidecar.istio.io/inject: "true" 
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
        autoscaling.knative.dev/min-scale: "1"
      labels:
        app: rest-fights
        app.openshift.io/runtime: quarkus
        application: fights-service
        system: quarkus-super-heroes
        app.kubernetes.io/part-of: fights-service
        app.kubernetes.io/version: native-java17-latest
        app.kubernetes.io/name: rest-fights
    spec:
      containerConcurrency: 0
      containers:
        - envFrom:
            - configMapRef:
                name: rest-fights-config
            - secretRef:
                name: rest-fights-config-creds
          image: quay.io/quarkus-super-heroes/rest-fights:native-java17-latest
          #imagePullPolicy: Always
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: 8082
              scheme: HTTP
            #initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          name: rest-fights
          ports:
            - containerPort: 8082
              name: http1
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/ready
              port: 8082
              scheme: HTTP
            #initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              memory: 128Mi
            requests:
              memory: 32Mi
