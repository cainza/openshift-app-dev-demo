---
- name: ArgoCD Route
  kubernetes.core.k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    name: "{{ openshift_argocd_gitops_route }}"
    namespace: "{{ openshift_argocd_namespace }}"
  register: argocdroute

- name: Tekton Demo Application in GitOps
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: argoproj.io/v1alpha1
      kind: Application
      metadata:
        name: quarkus-superheroes-tekton
        namespace: openshift-gitops
      spec:
        destination:
          namespace: quarkus-superheroes-serverless
          server: 'https://kubernetes.default.svc'
        project: "{{ cluster_demo_setup_project }}"
        source:
          path: demo/tekton/quarkus-superheroes-serverless
          repoURL: "{{ cluster_demo_setup_repo }}"
          targetRevision: "{{ cluster_demo_setup_revision }}"
        syncPolicy:
          syncOptions:
            - CreateNamespace=true

- name: Sync Tekton GitOps Application
  debug:
    msg: "Sync Tekton GitOps Application"

- sync_gitops_application:
    namespace: "{{ openshift_argocd_namespace }}"
    secret: "{{ openshift_argocd_secret }}"
    url: "{{argocdroute.resources[0].spec.host}}"
    port: 443
    application: quarkus-superheroes-tekton

- get_secret_value:
    secret: openshift-gitops-cluster
    namespace: openshift-gitops
    key: admin.password
  no_log: True
  register: argopassword

- name: Create a Service object from an inline definition
  kubernetes.core.k8s:
    state: present
    definition:
        apiVersion: v1
        kind: Secret
        metadata:
            name: argocd-env-secret
            namespace: quarkus-superheroes-serverless
        type: Opaque
        data:
            ARGOCD_PASSWORD: "{{ argopassword.password | b64encode }}"
            ARGOCD_USERNAME: "{{ 'admin' | b64encode }}"
  no_log: True